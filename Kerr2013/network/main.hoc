// MAIN.HOC
// This is the key simulation file. Run this file to run the simulation.
// Version: 2012nov22 by Cliff Kerr (cliffk@neurosim.downstate.edu)

print "Loading main.hoc..."

// Define parameters
maxplastscalefactor=5 // Modulates the maximum amount of plasticity
extinputscaling=0.0 // The rate at which external inputs are reduced for bigger models (since more internal activity); 0.2 for default or 0 for no scaling
extinputratemod=0.9/scale^extinputscaling // Amount by which to modulate external input rates
extinputweightmod=1 // Amount by which to modulate external input weights
pmatscale=500 // scale for pmat - originally 1/scale - allows keeping it fixed while changing # of cells in network
wmatscale=1 // scale for wmat, weight matrix; WARNING, has almost no effect for some reason
slambda=15 // spatial length constant for probability of connections, used in swirecut, in um
e4e2wt=4 // Scale factor for E4->E2 weight...seems too small as-is 
tce4wt=4 // Scale factor from TC to E4 cells...this is too high but wasn't doing much before
taurefracmod=1 // Scaling factor for relative refractory period time constant
amprefracmod=10 // Scaling factor for relative refractory period amplitude
delmscalemod=1 // Scaling factor for axonal delays


// Multiplicative gain factors -- yes these double up on EEGain etc., but more convenient to do it this way, sorry it's kludgy!
eemod=0.8 // E->E synapses
eimod=1.4 // E->I synapses
iemod=1.4 // I->E synapses
iimod=0.8 // I->I synapses

// Plasticity parameters -- see intf6.mod -- WARNING, not sure if these work with Sam's version
ESTDP_INTF6 = 0 // Turn on/off E->X plasticity
ISTDP_INTF6 = 0 // Turn on/off I->X plasticity
EPOTW_INTF6 = 0 // Weight by which STDP produces synaptic potentiation if t(post)>t(pre) at an E->[anything] synapse
EDEPW_INTF6 = 10 // Weight by which STDP produces synaptic depression if t(post)<t(pre) at an E->[anything] synapse
IPOTW_INTF6 = 0 // Weight by which STDP produces synaptic potentiation if t(post)>t(pre) at an I->[anything] synapse
IDEPW_INTF6 = 10 // Weight by which STDP produces synaptic depression if t(post)<t(pre) at an I->[anything] synapse



// Load files
load_file("setup.hoc")
load_file("nrnoc.hoc")
load_file("init.hoc")
load_file("nqsnet.hoc")
load_file("network.hoc")
load_file("params.hoc")
load_file("run.hoc")
load_file("nload.hoc")



// Create stimuli
load_file("stimuli.hoc") // Actually do stuff

// Set up weight-saving code
load_file("saveweights.hoc")

// RUN THE SIM
print "Running simulation..."
run() 

// Save results to disk
load_file("saveoutput.hoc") 

print "main.hoc: done"
